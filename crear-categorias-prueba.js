// Script para crear categor√≠as de prueba
const mongoose = require('./backend/node_modules/mongoose');

const MONGODB_URI = 'mongodb://localhost:27017/LuckasEnt';

// Esquema de Categorizaci√≥n
const categorizacionSchema = new mongoose.Schema({
  nombre: {
    type: String,
    required: [true, 'El nombre es obligatorio'],
    trim: true,
    unique: true
  },
  codigo: {
    type: String,
    required: [true, 'El c√≥digo es obligatorio'],
    unique: true,
    uppercase: true,
    trim: true
  },
  activo: {
    type: Boolean,
    default: true
  },
  creadoPor: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'User'
  }
}, {
  timestamps: true
});

const Categorizacion = mongoose.model('Categorizacion', categorizacionSchema);

// Categor√≠as de prueba
const categoriasPrueba = [
  {
    nombre: 'Acad√©mico',
    codigo: 'ACAD',
    activo: true
  },
  {
    nombre: 'Deportivo',
    codigo: 'DEP',
    activo: true
  },
  {
    nombre: 'Cultural',
    codigo: 'CULT',
    activo: true
  },
  {
    nombre: 'Tecnol√≥gico',
    codigo: 'TECH',
    activo: true
  }
];

async function main() {
  try {
    console.log('üîÑ Conectando a MongoDB...');
    await mongoose.connect(MONGODB_URI);
    console.log('‚úÖ Conectado a MongoDB');
    
    console.log('üîÑ Eliminando categor√≠as existentes...');
    await Categorizacion.deleteMany({});
    
    console.log('üìÇ Creando categor√≠as de prueba...');
    for (const datosCategoria of categoriasPrueba) {
      try {
        const categoria = new Categorizacion(datosCategoria);
        await categoria.save();
        console.log(`‚úÖ Categor√≠a creada: ${datosCategoria.nombre} (${datosCategoria.codigo})`);
      } catch (error) {
        console.error(`‚ùå Error creando categor√≠a ${datosCategoria.nombre}:`, error.message);
      }
    }
    
    console.log('\nüéâ ¬°Categor√≠as de prueba creadas exitosamente!');
    
    // Verificar que se crearon
    const categorias = await Categorizacion.find({});
    console.log(`\nüìä Total de categor√≠as en base de datos: ${categorias.length}`);
    
  } catch (error) {
    console.error('‚ùå Error:', error.message);
  } finally {
    await mongoose.connection.close();
    console.log('üîö Conexi√≥n cerrada');
    process.exit(0);
  }
}

main().catch(console.error);
